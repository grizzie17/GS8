/*---------------------------------------------------------------------+\
|
|	CDictPageLazyLoad.cpp  --  Lazy Load Variables
|
|	Purpose:
|
| optional topics (delete if not used)
|	Usage:
|	Restrictions/Warnings:
|	Algorithms/Formats:
|	References:
|	Notes:
|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|
|	Revision History:					(most recent entries first)
|
	19-Aug-2009			J.Griswold
		Change class hierarchy so that we are sharing a common base class
		of CDictPageVariant
	10-Jul-2009			J.Griswold
		Initial Revision
|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	Include Files														|
|																		|
\+---------------------------------------------------------------------*/
#include "stdafx.h"
#include "CDictPageLazyLoad.h"
/*---------------------------------------------------------------------+\
|																		|
|	Local defines / constants											|
|																		|
\+---------------------------------------------------------------------*/

namespace Yogi { namespace Gadget {
//USING_NAMESPACE_COMMON

/*---------------------------------------------------------------------+\
|																		|
|	Local Type Definitions												|
|																		|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	Private Global Variables											|
|																		|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	Public Global Variables												|
|																		|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	External Variables													|
|																		|
\+---------------------------------------------------------------------*/
/*=====================================================================+\
||																		|
||	 Code																|
||																		|
\+=====================================================================*/
/*=====================================================================+\
||	 class lifecycle functions											|
\+=====================================================================*/
/*---------------------------------------------------------------------+\

 * CDictPageLazyLoad - constructor

\+---------------------------------------------------------------------*/
CDictPageLazyLoad::CDictPageLazyLoad
		(
		void
		)
		: CDictPageVariant()
{
}


/*---------------------------------------------------------------------+\

 * ~CDictPageLazyLoad - destructor

\+---------------------------------------------------------------------*/
CDictPageLazyLoad::~CDictPageLazyLoad
		(
		void
		)
{
}

/*=====================================================================+\
||	 public member functions											|
\+=====================================================================*/


/*=====================================================================+\
||	 protected member functions											|
\+=====================================================================*/

/*=====================================================================+\
||	 private member functions											|
\+=====================================================================*/

/*=====================================================================+\
||																		|
||	 Overrides															|
||																		|
\+=====================================================================*/



/*---------------------------------------------------------------------+\

 * LocateEntry -

\+---------------------------------------------------------------------*/
long	CDictPageLazyLoad::LocateEntry
		(
		ConstCCharStringRef	rName
		)
{
	long	n = long(m_aContent.IndexOf( rName ));
	if ( n < 0 )
	{
		CVariantData	data;
		if ( m_aContent.Add( rName, data ) )
		{
			n = long(m_aContent.IndexOf( rName ));
		}
	}
	return n;
}









}}


/*---------------------------------------------------------------------+\

 * someFunction -

\+---------------------------------------------------------------------*/
