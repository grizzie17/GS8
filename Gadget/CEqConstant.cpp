/*---------------------------------------------------------------------+\
|
|	CEqConstant.cpp  --  brief description of what CEqConstant.cpp is for
|
|	Purpose:
|
| optional topics (delete if not used)
|	Usage:
|	Restrictions/Warnings:
|	Algorithms/Formats:
|	References:
|	Notes:
|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|
|	Revision History:					(most recent entries first)
|
	15-Sep-2009			J.Griswold		(Reviewed by: M.Rose)
		Fix compiler warnings
	28-Jun-2009			J.Griswold
		Initial Revision
|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	Include Files														|
|																		|
\+---------------------------------------------------------------------*/
#include "stdafx.h"
#include "CEqConstant.h"
/*---------------------------------------------------------------------+\
|																		|
|	Local defines / constants											|
|																		|
\+---------------------------------------------------------------------*/

NAMESPACE_GADGET_BEGIN
//USING_NAMESPACE_COMMON
/*---------------------------------------------------------------------+\
|																		|
|	Local Type Definitions												|
|																		|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	Private Global Variables											|
|																		|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	Public Global Variables												|
|																		|
\+---------------------------------------------------------------------*/
/*---------------------------------------------------------------------+\
|																		|
|	External Variables													|
|																		|
\+---------------------------------------------------------------------*/
/*=====================================================================+\
||																		|
||	 Code																|
||																		|
\+=====================================================================*/
/*=====================================================================+\
||	 class lifecycle functions											|
\+=====================================================================*/
/*---------------------------------------------------------------------+\

 * CEquationConstant - constructor

\+---------------------------------------------------------------------*/
CEquationConstant::CEquationConstant
		(
		void
		)
		: VEquation(),
		m_vData()
{
}

/*---------------------------------------------------------------------+\

 * CEquationConstant - copy constructor

\+---------------------------------------------------------------------*/
CEquationConstant::CEquationConstant
		(
		CEquationConstantRef	r
		)
		: VEquation( r ),
		m_vData( r.m_vData )
{
}

/*---------------------------------------------------------------------+\

 * ~CEquationConstant - destructor

\+---------------------------------------------------------------------*/
CEquationConstant::~CEquationConstant
		(
		void
		)
{
}

/*=====================================================================+\
||	 public member functions											|
\+=====================================================================*/

/*----------------------------------------------------------------------+\

 * operator= - assignment operator

\+---------------------------------------------------------------------*/
CEquationConstantRef
		CEquationConstant::operator=
		(
		CEquationConstantRef	r
		)
{
	m_vData = r.m_vData;
	return *this;
}


/*---------------------------------------------------------------------+\

 * SetValue - Assign a constant value

\+---------------------------------------------------------------------*/
void	CEquationConstant::SetValue
		(
		ConstCVariantDataRef d
		)
{
	m_vData = d;
}

/*---------------------------------------------------------------------+\

 * Clone - make a copy of this

\+---------------------------------------------------------------------*/
VEquationPtr
		CEquationConstant::Clone
		(
		void
		)
{
	return new CEquationConstant( *this );
}





/*=====================================================================+\
||	 protected member functions											|
\+=====================================================================*/

/*=====================================================================+\
||	 private member functions											|
\+=====================================================================*/

/*=====================================================================+\
||																		|
||	 Overrides															|
||																		|
\+=====================================================================*/

/*---------------------------------------------------------------------+\

 * GetValue -

\+---------------------------------------------------------------------*/
CVariantData
		CEquationConstant::GetValue
		(
		VDictionaryPtr	//pDict
		)
{
	return m_vData;
}



NAMESPACE_GADGET_END

/*---------------------------------------------------------------------+\

 * someFunction -

\+---------------------------------------------------------------------*/

